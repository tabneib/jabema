/* Generated By:JavaCC: Do not edit this line. PointcutParserConstants.java */
package net.cliseau.composer.javatarget.PointcutParser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PointcutParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 7;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 8;
  /** RegularExpression Id. */
  int DOT = 10;
  /** RegularExpression Id. */
  int COMMA = 11;
  /** RegularExpression Id. */
  int COLON = 12;
  /** RegularExpression Id. */
  int SEMICOLON = 13;
  /** RegularExpression Id. */
  int EXCMARK = 14;
  /** RegularExpression Id. */
  int LPARENTHESIS = 15;
  /** RegularExpression Id. */
  int RPARENTHESIS = 16;
  /** RegularExpression Id. */
  int LBRACKET = 17;
  /** RegularExpression Id. */
  int RBRACKET = 18;
  /** RegularExpression Id. */
  int GREATER = 19;
  /** RegularExpression Id. */
  int PLUS = 20;
  /** RegularExpression Id. */
  int STAR = 21;
  /** RegularExpression Id. */
  int AT = 22;
  /** RegularExpression Id. */
  int DOTDOT = 23;
  /** RegularExpression Id. */
  int ANDAND = 24;
  /** RegularExpression Id. */
  int OROR = 25;
  /** RegularExpression Id. */
  int IMPORT = 26;
  /** RegularExpression Id. */
  int POINTCUT = 27;
  /** RegularExpression Id. */
  int PUBLIC = 28;
  /** RegularExpression Id. */
  int PRIVATE = 29;
  /** RegularExpression Id. */
  int PROTECTED = 30;
  /** RegularExpression Id. */
  int ABSTRACT = 31;
  /** RegularExpression Id. */
  int Identifier = 32;
  /** RegularExpression Id. */
  int NOTSTRINGNOTPAR = 33;
  /** RegularExpression Id. */
  int STRING = 34;
  /** RegularExpression Id. */
  int XLPARENTHESIS = 35;
  /** RegularExpression Id. */
  int XRPARENTHESIS = 36;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 2;
  /** Lexical state. */
  int IN_JAVA_EXPR = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"//\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "<token of kind 9>",
    "\".\"",
    "\",\"",
    "\":\"",
    "\";\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\">\"",
    "\"+\"",
    "\"*\"",
    "\"@\"",
    "\"..\"",
    "\"&&\"",
    "\"||\"",
    "\"import\"",
    "\"pointcut\"",
    "\"public\"",
    "\"private\"",
    "\"protected\"",
    "\"abstract\"",
    "<Identifier>",
    "<NOTSTRINGNOTPAR>",
    "<STRING>",
    "\"(\"",
    "\")\"",
  };

}
